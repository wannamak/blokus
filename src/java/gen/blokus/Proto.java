// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blokus.proto

package blokus;

public final class Proto {
  private Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blokus.State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    java.util.List<blokus.Proto.MoveList> 
        getBlueList();
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    blokus.Proto.MoveList getBlue(int index);
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    int getBlueCount();
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getBlueOrBuilderList();
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    blokus.Proto.MoveListOrBuilder getBlueOrBuilder(
        int index);

    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    java.util.List<blokus.Proto.MoveList> 
        getYellowList();
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    blokus.Proto.MoveList getYellow(int index);
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    int getYellowCount();
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getYellowOrBuilderList();
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    blokus.Proto.MoveListOrBuilder getYellowOrBuilder(
        int index);

    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    java.util.List<blokus.Proto.MoveList> 
        getRedList();
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    blokus.Proto.MoveList getRed(int index);
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    int getRedCount();
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getRedOrBuilderList();
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    blokus.Proto.MoveListOrBuilder getRedOrBuilder(
        int index);

    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    java.util.List<blokus.Proto.MoveList> 
        getGreenList();
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    blokus.Proto.MoveList getGreen(int index);
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    int getGreenCount();
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getGreenOrBuilderList();
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    blokus.Proto.MoveListOrBuilder getGreenOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code blokus.State}
   */
  public static final class State extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:blokus.State)
      StateOrBuilder {
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private State(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final State defaultInstance;
    public static State getDefaultInstance() {
      return defaultInstance;
    }

    public State getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                blue_ = new java.util.ArrayList<blokus.Proto.MoveList>();
                mutable_bitField0_ |= 0x00000001;
              }
              blue_.add(input.readMessage(blokus.Proto.MoveList.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                yellow_ = new java.util.ArrayList<blokus.Proto.MoveList>();
                mutable_bitField0_ |= 0x00000002;
              }
              yellow_.add(input.readMessage(blokus.Proto.MoveList.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                red_ = new java.util.ArrayList<blokus.Proto.MoveList>();
                mutable_bitField0_ |= 0x00000004;
              }
              red_.add(input.readMessage(blokus.Proto.MoveList.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                green_ = new java.util.ArrayList<blokus.Proto.MoveList>();
                mutable_bitField0_ |= 0x00000008;
              }
              green_.add(input.readMessage(blokus.Proto.MoveList.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          blue_ = java.util.Collections.unmodifiableList(blue_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          yellow_ = java.util.Collections.unmodifiableList(yellow_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          red_ = java.util.Collections.unmodifiableList(red_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          green_ = java.util.Collections.unmodifiableList(green_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return blokus.Proto.internal_static_blokus_State_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return blokus.Proto.internal_static_blokus_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blokus.Proto.State.class, blokus.Proto.State.Builder.class);
    }

    public static com.google.protobuf.Parser<State> PARSER =
        new com.google.protobuf.AbstractParser<State>() {
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new State(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    public static final int BLUE_FIELD_NUMBER = 1;
    private java.util.List<blokus.Proto.MoveList> blue_;
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    public java.util.List<blokus.Proto.MoveList> getBlueList() {
      return blue_;
    }
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getBlueOrBuilderList() {
      return blue_;
    }
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    public int getBlueCount() {
      return blue_.size();
    }
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    public blokus.Proto.MoveList getBlue(int index) {
      return blue_.get(index);
    }
    /**
     * <code>repeated .blokus.MoveList blue = 1;</code>
     */
    public blokus.Proto.MoveListOrBuilder getBlueOrBuilder(
        int index) {
      return blue_.get(index);
    }

    public static final int YELLOW_FIELD_NUMBER = 2;
    private java.util.List<blokus.Proto.MoveList> yellow_;
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    public java.util.List<blokus.Proto.MoveList> getYellowList() {
      return yellow_;
    }
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getYellowOrBuilderList() {
      return yellow_;
    }
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    public int getYellowCount() {
      return yellow_.size();
    }
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    public blokus.Proto.MoveList getYellow(int index) {
      return yellow_.get(index);
    }
    /**
     * <code>repeated .blokus.MoveList yellow = 2;</code>
     */
    public blokus.Proto.MoveListOrBuilder getYellowOrBuilder(
        int index) {
      return yellow_.get(index);
    }

    public static final int RED_FIELD_NUMBER = 3;
    private java.util.List<blokus.Proto.MoveList> red_;
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    public java.util.List<blokus.Proto.MoveList> getRedList() {
      return red_;
    }
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getRedOrBuilderList() {
      return red_;
    }
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    public int getRedCount() {
      return red_.size();
    }
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    public blokus.Proto.MoveList getRed(int index) {
      return red_.get(index);
    }
    /**
     * <code>repeated .blokus.MoveList red = 3;</code>
     */
    public blokus.Proto.MoveListOrBuilder getRedOrBuilder(
        int index) {
      return red_.get(index);
    }

    public static final int GREEN_FIELD_NUMBER = 4;
    private java.util.List<blokus.Proto.MoveList> green_;
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    public java.util.List<blokus.Proto.MoveList> getGreenList() {
      return green_;
    }
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
        getGreenOrBuilderList() {
      return green_;
    }
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    public int getGreenCount() {
      return green_.size();
    }
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    public blokus.Proto.MoveList getGreen(int index) {
      return green_.get(index);
    }
    /**
     * <code>repeated .blokus.MoveList green = 4;</code>
     */
    public blokus.Proto.MoveListOrBuilder getGreenOrBuilder(
        int index) {
      return green_.get(index);
    }

    private void initFields() {
      blue_ = java.util.Collections.emptyList();
      yellow_ = java.util.Collections.emptyList();
      red_ = java.util.Collections.emptyList();
      green_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < blue_.size(); i++) {
        output.writeMessage(1, blue_.get(i));
      }
      for (int i = 0; i < yellow_.size(); i++) {
        output.writeMessage(2, yellow_.get(i));
      }
      for (int i = 0; i < red_.size(); i++) {
        output.writeMessage(3, red_.get(i));
      }
      for (int i = 0; i < green_.size(); i++) {
        output.writeMessage(4, green_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < blue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, blue_.get(i));
      }
      for (int i = 0; i < yellow_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, yellow_.get(i));
      }
      for (int i = 0; i < red_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, red_.get(i));
      }
      for (int i = 0; i < green_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, green_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static blokus.Proto.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blokus.Proto.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blokus.Proto.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blokus.Proto.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blokus.Proto.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static blokus.Proto.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static blokus.Proto.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static blokus.Proto.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static blokus.Proto.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static blokus.Proto.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(blokus.Proto.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blokus.State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blokus.State)
        blokus.Proto.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return blokus.Proto.internal_static_blokus_State_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return blokus.Proto.internal_static_blokus_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                blokus.Proto.State.class, blokus.Proto.State.Builder.class);
      }

      // Construct using blokus.Proto.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBlueFieldBuilder();
          getYellowFieldBuilder();
          getRedFieldBuilder();
          getGreenFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (blueBuilder_ == null) {
          blue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          blueBuilder_.clear();
        }
        if (yellowBuilder_ == null) {
          yellow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          yellowBuilder_.clear();
        }
        if (redBuilder_ == null) {
          red_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          redBuilder_.clear();
        }
        if (greenBuilder_ == null) {
          green_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          greenBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return blokus.Proto.internal_static_blokus_State_descriptor;
      }

      public blokus.Proto.State getDefaultInstanceForType() {
        return blokus.Proto.State.getDefaultInstance();
      }

      public blokus.Proto.State build() {
        blokus.Proto.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public blokus.Proto.State buildPartial() {
        blokus.Proto.State result = new blokus.Proto.State(this);
        int from_bitField0_ = bitField0_;
        if (blueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            blue_ = java.util.Collections.unmodifiableList(blue_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.blue_ = blue_;
        } else {
          result.blue_ = blueBuilder_.build();
        }
        if (yellowBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            yellow_ = java.util.Collections.unmodifiableList(yellow_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.yellow_ = yellow_;
        } else {
          result.yellow_ = yellowBuilder_.build();
        }
        if (redBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            red_ = java.util.Collections.unmodifiableList(red_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.red_ = red_;
        } else {
          result.red_ = redBuilder_.build();
        }
        if (greenBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            green_ = java.util.Collections.unmodifiableList(green_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.green_ = green_;
        } else {
          result.green_ = greenBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof blokus.Proto.State) {
          return mergeFrom((blokus.Proto.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(blokus.Proto.State other) {
        if (other == blokus.Proto.State.getDefaultInstance()) return this;
        if (blueBuilder_ == null) {
          if (!other.blue_.isEmpty()) {
            if (blue_.isEmpty()) {
              blue_ = other.blue_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBlueIsMutable();
              blue_.addAll(other.blue_);
            }
            onChanged();
          }
        } else {
          if (!other.blue_.isEmpty()) {
            if (blueBuilder_.isEmpty()) {
              blueBuilder_.dispose();
              blueBuilder_ = null;
              blue_ = other.blue_;
              bitField0_ = (bitField0_ & ~0x00000001);
              blueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBlueFieldBuilder() : null;
            } else {
              blueBuilder_.addAllMessages(other.blue_);
            }
          }
        }
        if (yellowBuilder_ == null) {
          if (!other.yellow_.isEmpty()) {
            if (yellow_.isEmpty()) {
              yellow_ = other.yellow_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureYellowIsMutable();
              yellow_.addAll(other.yellow_);
            }
            onChanged();
          }
        } else {
          if (!other.yellow_.isEmpty()) {
            if (yellowBuilder_.isEmpty()) {
              yellowBuilder_.dispose();
              yellowBuilder_ = null;
              yellow_ = other.yellow_;
              bitField0_ = (bitField0_ & ~0x00000002);
              yellowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getYellowFieldBuilder() : null;
            } else {
              yellowBuilder_.addAllMessages(other.yellow_);
            }
          }
        }
        if (redBuilder_ == null) {
          if (!other.red_.isEmpty()) {
            if (red_.isEmpty()) {
              red_ = other.red_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRedIsMutable();
              red_.addAll(other.red_);
            }
            onChanged();
          }
        } else {
          if (!other.red_.isEmpty()) {
            if (redBuilder_.isEmpty()) {
              redBuilder_.dispose();
              redBuilder_ = null;
              red_ = other.red_;
              bitField0_ = (bitField0_ & ~0x00000004);
              redBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRedFieldBuilder() : null;
            } else {
              redBuilder_.addAllMessages(other.red_);
            }
          }
        }
        if (greenBuilder_ == null) {
          if (!other.green_.isEmpty()) {
            if (green_.isEmpty()) {
              green_ = other.green_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGreenIsMutable();
              green_.addAll(other.green_);
            }
            onChanged();
          }
        } else {
          if (!other.green_.isEmpty()) {
            if (greenBuilder_.isEmpty()) {
              greenBuilder_.dispose();
              greenBuilder_ = null;
              green_ = other.green_;
              bitField0_ = (bitField0_ & ~0x00000008);
              greenBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGreenFieldBuilder() : null;
            } else {
              greenBuilder_.addAllMessages(other.green_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        blokus.Proto.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (blokus.Proto.State) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<blokus.Proto.MoveList> blue_ =
        java.util.Collections.emptyList();
      private void ensureBlueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          blue_ = new java.util.ArrayList<blokus.Proto.MoveList>(blue_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> blueBuilder_;

      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public java.util.List<blokus.Proto.MoveList> getBlueList() {
        if (blueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(blue_);
        } else {
          return blueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public int getBlueCount() {
        if (blueBuilder_ == null) {
          return blue_.size();
        } else {
          return blueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public blokus.Proto.MoveList getBlue(int index) {
        if (blueBuilder_ == null) {
          return blue_.get(index);
        } else {
          return blueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder setBlue(
          int index, blokus.Proto.MoveList value) {
        if (blueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlueIsMutable();
          blue_.set(index, value);
          onChanged();
        } else {
          blueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder setBlue(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (blueBuilder_ == null) {
          ensureBlueIsMutable();
          blue_.set(index, builderForValue.build());
          onChanged();
        } else {
          blueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder addBlue(blokus.Proto.MoveList value) {
        if (blueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlueIsMutable();
          blue_.add(value);
          onChanged();
        } else {
          blueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder addBlue(
          int index, blokus.Proto.MoveList value) {
        if (blueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlueIsMutable();
          blue_.add(index, value);
          onChanged();
        } else {
          blueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder addBlue(
          blokus.Proto.MoveList.Builder builderForValue) {
        if (blueBuilder_ == null) {
          ensureBlueIsMutable();
          blue_.add(builderForValue.build());
          onChanged();
        } else {
          blueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder addBlue(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (blueBuilder_ == null) {
          ensureBlueIsMutable();
          blue_.add(index, builderForValue.build());
          onChanged();
        } else {
          blueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder addAllBlue(
          java.lang.Iterable<? extends blokus.Proto.MoveList> values) {
        if (blueBuilder_ == null) {
          ensureBlueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, blue_);
          onChanged();
        } else {
          blueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder clearBlue() {
        if (blueBuilder_ == null) {
          blue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          blueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public Builder removeBlue(int index) {
        if (blueBuilder_ == null) {
          ensureBlueIsMutable();
          blue_.remove(index);
          onChanged();
        } else {
          blueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public blokus.Proto.MoveList.Builder getBlueBuilder(
          int index) {
        return getBlueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public blokus.Proto.MoveListOrBuilder getBlueOrBuilder(
          int index) {
        if (blueBuilder_ == null) {
          return blue_.get(index);  } else {
          return blueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
           getBlueOrBuilderList() {
        if (blueBuilder_ != null) {
          return blueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(blue_);
        }
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public blokus.Proto.MoveList.Builder addBlueBuilder() {
        return getBlueFieldBuilder().addBuilder(
            blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public blokus.Proto.MoveList.Builder addBlueBuilder(
          int index) {
        return getBlueFieldBuilder().addBuilder(
            index, blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList blue = 1;</code>
       */
      public java.util.List<blokus.Proto.MoveList.Builder> 
           getBlueBuilderList() {
        return getBlueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> 
          getBlueFieldBuilder() {
        if (blueBuilder_ == null) {
          blueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder>(
                  blue_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          blue_ = null;
        }
        return blueBuilder_;
      }

      private java.util.List<blokus.Proto.MoveList> yellow_ =
        java.util.Collections.emptyList();
      private void ensureYellowIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          yellow_ = new java.util.ArrayList<blokus.Proto.MoveList>(yellow_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> yellowBuilder_;

      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public java.util.List<blokus.Proto.MoveList> getYellowList() {
        if (yellowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(yellow_);
        } else {
          return yellowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public int getYellowCount() {
        if (yellowBuilder_ == null) {
          return yellow_.size();
        } else {
          return yellowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public blokus.Proto.MoveList getYellow(int index) {
        if (yellowBuilder_ == null) {
          return yellow_.get(index);
        } else {
          return yellowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder setYellow(
          int index, blokus.Proto.MoveList value) {
        if (yellowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYellowIsMutable();
          yellow_.set(index, value);
          onChanged();
        } else {
          yellowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder setYellow(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (yellowBuilder_ == null) {
          ensureYellowIsMutable();
          yellow_.set(index, builderForValue.build());
          onChanged();
        } else {
          yellowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder addYellow(blokus.Proto.MoveList value) {
        if (yellowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYellowIsMutable();
          yellow_.add(value);
          onChanged();
        } else {
          yellowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder addYellow(
          int index, blokus.Proto.MoveList value) {
        if (yellowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYellowIsMutable();
          yellow_.add(index, value);
          onChanged();
        } else {
          yellowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder addYellow(
          blokus.Proto.MoveList.Builder builderForValue) {
        if (yellowBuilder_ == null) {
          ensureYellowIsMutable();
          yellow_.add(builderForValue.build());
          onChanged();
        } else {
          yellowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder addYellow(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (yellowBuilder_ == null) {
          ensureYellowIsMutable();
          yellow_.add(index, builderForValue.build());
          onChanged();
        } else {
          yellowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder addAllYellow(
          java.lang.Iterable<? extends blokus.Proto.MoveList> values) {
        if (yellowBuilder_ == null) {
          ensureYellowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, yellow_);
          onChanged();
        } else {
          yellowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder clearYellow() {
        if (yellowBuilder_ == null) {
          yellow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          yellowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public Builder removeYellow(int index) {
        if (yellowBuilder_ == null) {
          ensureYellowIsMutable();
          yellow_.remove(index);
          onChanged();
        } else {
          yellowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public blokus.Proto.MoveList.Builder getYellowBuilder(
          int index) {
        return getYellowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public blokus.Proto.MoveListOrBuilder getYellowOrBuilder(
          int index) {
        if (yellowBuilder_ == null) {
          return yellow_.get(index);  } else {
          return yellowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
           getYellowOrBuilderList() {
        if (yellowBuilder_ != null) {
          return yellowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(yellow_);
        }
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public blokus.Proto.MoveList.Builder addYellowBuilder() {
        return getYellowFieldBuilder().addBuilder(
            blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public blokus.Proto.MoveList.Builder addYellowBuilder(
          int index) {
        return getYellowFieldBuilder().addBuilder(
            index, blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList yellow = 2;</code>
       */
      public java.util.List<blokus.Proto.MoveList.Builder> 
           getYellowBuilderList() {
        return getYellowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> 
          getYellowFieldBuilder() {
        if (yellowBuilder_ == null) {
          yellowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder>(
                  yellow_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          yellow_ = null;
        }
        return yellowBuilder_;
      }

      private java.util.List<blokus.Proto.MoveList> red_ =
        java.util.Collections.emptyList();
      private void ensureRedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          red_ = new java.util.ArrayList<blokus.Proto.MoveList>(red_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> redBuilder_;

      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public java.util.List<blokus.Proto.MoveList> getRedList() {
        if (redBuilder_ == null) {
          return java.util.Collections.unmodifiableList(red_);
        } else {
          return redBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public int getRedCount() {
        if (redBuilder_ == null) {
          return red_.size();
        } else {
          return redBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public blokus.Proto.MoveList getRed(int index) {
        if (redBuilder_ == null) {
          return red_.get(index);
        } else {
          return redBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder setRed(
          int index, blokus.Proto.MoveList value) {
        if (redBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedIsMutable();
          red_.set(index, value);
          onChanged();
        } else {
          redBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder setRed(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (redBuilder_ == null) {
          ensureRedIsMutable();
          red_.set(index, builderForValue.build());
          onChanged();
        } else {
          redBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder addRed(blokus.Proto.MoveList value) {
        if (redBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedIsMutable();
          red_.add(value);
          onChanged();
        } else {
          redBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder addRed(
          int index, blokus.Proto.MoveList value) {
        if (redBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedIsMutable();
          red_.add(index, value);
          onChanged();
        } else {
          redBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder addRed(
          blokus.Proto.MoveList.Builder builderForValue) {
        if (redBuilder_ == null) {
          ensureRedIsMutable();
          red_.add(builderForValue.build());
          onChanged();
        } else {
          redBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder addRed(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (redBuilder_ == null) {
          ensureRedIsMutable();
          red_.add(index, builderForValue.build());
          onChanged();
        } else {
          redBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder addAllRed(
          java.lang.Iterable<? extends blokus.Proto.MoveList> values) {
        if (redBuilder_ == null) {
          ensureRedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, red_);
          onChanged();
        } else {
          redBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder clearRed() {
        if (redBuilder_ == null) {
          red_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          redBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public Builder removeRed(int index) {
        if (redBuilder_ == null) {
          ensureRedIsMutable();
          red_.remove(index);
          onChanged();
        } else {
          redBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public blokus.Proto.MoveList.Builder getRedBuilder(
          int index) {
        return getRedFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public blokus.Proto.MoveListOrBuilder getRedOrBuilder(
          int index) {
        if (redBuilder_ == null) {
          return red_.get(index);  } else {
          return redBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
           getRedOrBuilderList() {
        if (redBuilder_ != null) {
          return redBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(red_);
        }
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public blokus.Proto.MoveList.Builder addRedBuilder() {
        return getRedFieldBuilder().addBuilder(
            blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public blokus.Proto.MoveList.Builder addRedBuilder(
          int index) {
        return getRedFieldBuilder().addBuilder(
            index, blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList red = 3;</code>
       */
      public java.util.List<blokus.Proto.MoveList.Builder> 
           getRedBuilderList() {
        return getRedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> 
          getRedFieldBuilder() {
        if (redBuilder_ == null) {
          redBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder>(
                  red_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          red_ = null;
        }
        return redBuilder_;
      }

      private java.util.List<blokus.Proto.MoveList> green_ =
        java.util.Collections.emptyList();
      private void ensureGreenIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          green_ = new java.util.ArrayList<blokus.Proto.MoveList>(green_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> greenBuilder_;

      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public java.util.List<blokus.Proto.MoveList> getGreenList() {
        if (greenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(green_);
        } else {
          return greenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public int getGreenCount() {
        if (greenBuilder_ == null) {
          return green_.size();
        } else {
          return greenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public blokus.Proto.MoveList getGreen(int index) {
        if (greenBuilder_ == null) {
          return green_.get(index);
        } else {
          return greenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder setGreen(
          int index, blokus.Proto.MoveList value) {
        if (greenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGreenIsMutable();
          green_.set(index, value);
          onChanged();
        } else {
          greenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder setGreen(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (greenBuilder_ == null) {
          ensureGreenIsMutable();
          green_.set(index, builderForValue.build());
          onChanged();
        } else {
          greenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder addGreen(blokus.Proto.MoveList value) {
        if (greenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGreenIsMutable();
          green_.add(value);
          onChanged();
        } else {
          greenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder addGreen(
          int index, blokus.Proto.MoveList value) {
        if (greenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGreenIsMutable();
          green_.add(index, value);
          onChanged();
        } else {
          greenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder addGreen(
          blokus.Proto.MoveList.Builder builderForValue) {
        if (greenBuilder_ == null) {
          ensureGreenIsMutable();
          green_.add(builderForValue.build());
          onChanged();
        } else {
          greenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder addGreen(
          int index, blokus.Proto.MoveList.Builder builderForValue) {
        if (greenBuilder_ == null) {
          ensureGreenIsMutable();
          green_.add(index, builderForValue.build());
          onChanged();
        } else {
          greenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder addAllGreen(
          java.lang.Iterable<? extends blokus.Proto.MoveList> values) {
        if (greenBuilder_ == null) {
          ensureGreenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, green_);
          onChanged();
        } else {
          greenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder clearGreen() {
        if (greenBuilder_ == null) {
          green_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          greenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public Builder removeGreen(int index) {
        if (greenBuilder_ == null) {
          ensureGreenIsMutable();
          green_.remove(index);
          onChanged();
        } else {
          greenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public blokus.Proto.MoveList.Builder getGreenBuilder(
          int index) {
        return getGreenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public blokus.Proto.MoveListOrBuilder getGreenOrBuilder(
          int index) {
        if (greenBuilder_ == null) {
          return green_.get(index);  } else {
          return greenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public java.util.List<? extends blokus.Proto.MoveListOrBuilder> 
           getGreenOrBuilderList() {
        if (greenBuilder_ != null) {
          return greenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(green_);
        }
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public blokus.Proto.MoveList.Builder addGreenBuilder() {
        return getGreenFieldBuilder().addBuilder(
            blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public blokus.Proto.MoveList.Builder addGreenBuilder(
          int index) {
        return getGreenFieldBuilder().addBuilder(
            index, blokus.Proto.MoveList.getDefaultInstance());
      }
      /**
       * <code>repeated .blokus.MoveList green = 4;</code>
       */
      public java.util.List<blokus.Proto.MoveList.Builder> 
           getGreenBuilderList() {
        return getGreenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder> 
          getGreenFieldBuilder() {
        if (greenBuilder_ == null) {
          greenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              blokus.Proto.MoveList, blokus.Proto.MoveList.Builder, blokus.Proto.MoveListOrBuilder>(
                  green_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          green_ = null;
        }
        return greenBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:blokus.State)
    }

    static {
      defaultInstance = new State(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:blokus.State)
  }

  public interface MoveListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blokus.MoveList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    java.util.List<java.lang.Integer> getBoardReceptorList();
    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    int getBoardReceptorCount();
    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    int getBoardReceptor(int index);

    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    java.util.List<java.lang.Integer> getUniqueIdList();
    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    int getUniqueIdCount();
    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    int getUniqueId(int index);

    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    java.util.List<java.lang.Integer> getPieceCellList();
    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    int getPieceCellCount();
    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    int getPieceCell(int index);
  }
  /**
   * Protobuf type {@code blokus.MoveList}
   */
  public static final class MoveList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:blokus.MoveList)
      MoveListOrBuilder {
    // Use MoveList.newBuilder() to construct.
    private MoveList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MoveList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MoveList defaultInstance;
    public static MoveList getDefaultInstance() {
      return defaultInstance;
    }

    public MoveList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MoveList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                boardReceptor_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              boardReceptor_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                boardReceptor_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                boardReceptor_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                uniqueId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              uniqueId_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                uniqueId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                uniqueId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pieceCell_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              pieceCell_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                pieceCell_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                pieceCell_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          boardReceptor_ = java.util.Collections.unmodifiableList(boardReceptor_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          uniqueId_ = java.util.Collections.unmodifiableList(uniqueId_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pieceCell_ = java.util.Collections.unmodifiableList(pieceCell_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return blokus.Proto.internal_static_blokus_MoveList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return blokus.Proto.internal_static_blokus_MoveList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blokus.Proto.MoveList.class, blokus.Proto.MoveList.Builder.class);
    }

    public static com.google.protobuf.Parser<MoveList> PARSER =
        new com.google.protobuf.AbstractParser<MoveList>() {
      public MoveList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MoveList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MoveList> getParserForType() {
      return PARSER;
    }

    public static final int BOARD_RECEPTOR_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> boardReceptor_;
    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getBoardReceptorList() {
      return boardReceptor_;
    }
    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    public int getBoardReceptorCount() {
      return boardReceptor_.size();
    }
    /**
     * <code>repeated int32 board_receptor = 1;</code>
     */
    public int getBoardReceptor(int index) {
      return boardReceptor_.get(index);
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> uniqueId_;
    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getUniqueIdList() {
      return uniqueId_;
    }
    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    public int getUniqueIdCount() {
      return uniqueId_.size();
    }
    /**
     * <code>repeated int32 unique_id = 2;</code>
     */
    public int getUniqueId(int index) {
      return uniqueId_.get(index);
    }

    public static final int PIECE_CELL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> pieceCell_;
    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getPieceCellList() {
      return pieceCell_;
    }
    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    public int getPieceCellCount() {
      return pieceCell_.size();
    }
    /**
     * <code>repeated int32 piece_cell = 3;</code>
     */
    public int getPieceCell(int index) {
      return pieceCell_.get(index);
    }

    private void initFields() {
      boardReceptor_ = java.util.Collections.emptyList();
      uniqueId_ = java.util.Collections.emptyList();
      pieceCell_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < boardReceptor_.size(); i++) {
        output.writeInt32(1, boardReceptor_.get(i));
      }
      for (int i = 0; i < uniqueId_.size(); i++) {
        output.writeInt32(2, uniqueId_.get(i));
      }
      for (int i = 0; i < pieceCell_.size(); i++) {
        output.writeInt32(3, pieceCell_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < boardReceptor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(boardReceptor_.get(i));
        }
        size += dataSize;
        size += 1 * getBoardReceptorList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uniqueId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(uniqueId_.get(i));
        }
        size += dataSize;
        size += 1 * getUniqueIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pieceCell_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pieceCell_.get(i));
        }
        size += dataSize;
        size += 1 * getPieceCellList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static blokus.Proto.MoveList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blokus.Proto.MoveList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blokus.Proto.MoveList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blokus.Proto.MoveList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blokus.Proto.MoveList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static blokus.Proto.MoveList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static blokus.Proto.MoveList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static blokus.Proto.MoveList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static blokus.Proto.MoveList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static blokus.Proto.MoveList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(blokus.Proto.MoveList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blokus.MoveList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blokus.MoveList)
        blokus.Proto.MoveListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return blokus.Proto.internal_static_blokus_MoveList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return blokus.Proto.internal_static_blokus_MoveList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                blokus.Proto.MoveList.class, blokus.Proto.MoveList.Builder.class);
      }

      // Construct using blokus.Proto.MoveList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        boardReceptor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        uniqueId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        pieceCell_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return blokus.Proto.internal_static_blokus_MoveList_descriptor;
      }

      public blokus.Proto.MoveList getDefaultInstanceForType() {
        return blokus.Proto.MoveList.getDefaultInstance();
      }

      public blokus.Proto.MoveList build() {
        blokus.Proto.MoveList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public blokus.Proto.MoveList buildPartial() {
        blokus.Proto.MoveList result = new blokus.Proto.MoveList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          boardReceptor_ = java.util.Collections.unmodifiableList(boardReceptor_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.boardReceptor_ = boardReceptor_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          uniqueId_ = java.util.Collections.unmodifiableList(uniqueId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.uniqueId_ = uniqueId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pieceCell_ = java.util.Collections.unmodifiableList(pieceCell_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pieceCell_ = pieceCell_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof blokus.Proto.MoveList) {
          return mergeFrom((blokus.Proto.MoveList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(blokus.Proto.MoveList other) {
        if (other == blokus.Proto.MoveList.getDefaultInstance()) return this;
        if (!other.boardReceptor_.isEmpty()) {
          if (boardReceptor_.isEmpty()) {
            boardReceptor_ = other.boardReceptor_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBoardReceptorIsMutable();
            boardReceptor_.addAll(other.boardReceptor_);
          }
          onChanged();
        }
        if (!other.uniqueId_.isEmpty()) {
          if (uniqueId_.isEmpty()) {
            uniqueId_ = other.uniqueId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUniqueIdIsMutable();
            uniqueId_.addAll(other.uniqueId_);
          }
          onChanged();
        }
        if (!other.pieceCell_.isEmpty()) {
          if (pieceCell_.isEmpty()) {
            pieceCell_ = other.pieceCell_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePieceCellIsMutable();
            pieceCell_.addAll(other.pieceCell_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        blokus.Proto.MoveList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (blokus.Proto.MoveList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> boardReceptor_ = java.util.Collections.emptyList();
      private void ensureBoardReceptorIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          boardReceptor_ = new java.util.ArrayList<java.lang.Integer>(boardReceptor_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getBoardReceptorList() {
        return java.util.Collections.unmodifiableList(boardReceptor_);
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public int getBoardReceptorCount() {
        return boardReceptor_.size();
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public int getBoardReceptor(int index) {
        return boardReceptor_.get(index);
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public Builder setBoardReceptor(
          int index, int value) {
        ensureBoardReceptorIsMutable();
        boardReceptor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public Builder addBoardReceptor(int value) {
        ensureBoardReceptorIsMutable();
        boardReceptor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public Builder addAllBoardReceptor(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBoardReceptorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boardReceptor_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board_receptor = 1;</code>
       */
      public Builder clearBoardReceptor() {
        boardReceptor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uniqueId_ = java.util.Collections.emptyList();
      private void ensureUniqueIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          uniqueId_ = new java.util.ArrayList<java.lang.Integer>(uniqueId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getUniqueIdList() {
        return java.util.Collections.unmodifiableList(uniqueId_);
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public int getUniqueIdCount() {
        return uniqueId_.size();
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public int getUniqueId(int index) {
        return uniqueId_.get(index);
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public Builder setUniqueId(
          int index, int value) {
        ensureUniqueIdIsMutable();
        uniqueId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public Builder addUniqueId(int value) {
        ensureUniqueIdIsMutable();
        uniqueId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public Builder addAllUniqueId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUniqueIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uniqueId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 unique_id = 2;</code>
       */
      public Builder clearUniqueId() {
        uniqueId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> pieceCell_ = java.util.Collections.emptyList();
      private void ensurePieceCellIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pieceCell_ = new java.util.ArrayList<java.lang.Integer>(pieceCell_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getPieceCellList() {
        return java.util.Collections.unmodifiableList(pieceCell_);
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public int getPieceCellCount() {
        return pieceCell_.size();
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public int getPieceCell(int index) {
        return pieceCell_.get(index);
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public Builder setPieceCell(
          int index, int value) {
        ensurePieceCellIsMutable();
        pieceCell_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public Builder addPieceCell(int value) {
        ensurePieceCellIsMutable();
        pieceCell_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public Builder addAllPieceCell(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePieceCellIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pieceCell_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piece_cell = 3;</code>
       */
      public Builder clearPieceCell() {
        pieceCell_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:blokus.MoveList)
    }

    static {
      defaultInstance = new MoveList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:blokus.MoveList)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blokus_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blokus_State_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blokus_MoveList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blokus_MoveList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014blokus.proto\022\006blokus\"\211\001\n\005State\022\036\n\004blue" +
      "\030\001 \003(\0132\020.blokus.MoveList\022 \n\006yellow\030\002 \003(\013" +
      "2\020.blokus.MoveList\022\035\n\003red\030\003 \003(\0132\020.blokus" +
      ".MoveList\022\037\n\005green\030\004 \003(\0132\020.blokus.MoveLi" +
      "st\"I\n\010MoveList\022\026\n\016board_receptor\030\001 \003(\005\022\021" +
      "\n\tunique_id\030\002 \003(\005\022\022\n\npiece_cell\030\003 \003(\005B\017\n" +
      "\006blokusB\005Proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_blokus_State_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_blokus_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_blokus_State_descriptor,
        new java.lang.String[] { "Blue", "Yellow", "Red", "Green", });
    internal_static_blokus_MoveList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_blokus_MoveList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_blokus_MoveList_descriptor,
        new java.lang.String[] { "BoardReceptor", "UniqueId", "PieceCell", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
